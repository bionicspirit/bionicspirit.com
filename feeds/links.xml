<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:dc="http://purl.org/dc/elements/1.1/">

  <channel>
    <title>Alexandru Nedelcu - Shared Links</title>
    <description>Feed of recommended links from around the web, published at alexn.org/links/</description>
    <link>https://alexn.org/links/</link>
    <atom:link href="https://alexn.org/feeds/links.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 26 Feb 2021 13:16:57 +0000</pubDate>
    <lastBuildDate>Fri, 26 Feb 2021 13:16:57 +0000</lastBuildDate>
  	<language>en</language>
    <sy:updatePeriod>hourly</sy:updatePeriod>
	  <sy:updateFrequency>1</sy:updateFrequency>
    <generator>Jekyll v4.1.1</generator>

    
      
        <item>
  <title>OOP vs Type Classes (Slides, PDF)</title>
  <description>&lt;a href=&quot;http://alexn.org/assets/pdfs/OOP-vs-Type-Classes-Scala-Love-2021.pdf&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-oop-typeclasses.jpg?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;Slides from my talk at Scala Love in the City 2021.&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;http://alexn.org/assets/pdfs/OOP-vs-Type-Classes-Scala-Love-2021.pdf&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 13 Feb 2021 16:14:21 +0000</pubDate>
  <dc:modified>Sat, 13 Feb 2021 16:17:41 +0000</dc:modified>
  <atom:modified>Sat, 13 Feb 2021 16:17:41 +0000</atom:modified>
  <link>http://alexn.org/assets/pdfs/OOP-vs-Type-Classes-Scala-Love-2021.pdf</link>
  <guid isPermaLink="false">https://alexn.org/links/2021/02/13/oop-vs-type-classes-slides-from-scala-love-in-the-city-2021.html</guid>
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Shared link</category>
  
  <category>Category Theory</category>
  
  <category>FP</category>
  
  <category>OOP</category>
  
  <category>PDF</category>
  
  <category>Programming</category>
  
  <category>Scala</category>
  
</item>

      
    
      
        <item>
  <title>FP vs OO: Choose Two</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=8GWZE2Y2O9E&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/8GWZE2Y2O9E/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;“&lt;em&gt;This talk is about the fictitious divisions we invent, and how they harm the progress of our industry. In particular, we’ll look at the supposed tension between Functional Programming and Object-Oriented Programming, and hopefully see that the tension is all in our heads.&lt;/em&gt;”&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=8GWZE2Y2O9E&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 07 Feb 2021 12:00:28 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=8GWZE2Y2O9E</link>
  <guid isPermaLink="false">https://alexn.org/links/2021/02/07/fp-vs-oo-choose-two.html</guid>
  
  <dc:creator>Brian Goetz</dc:creator>
  
  <category>Shared link</category>
  
  <category>FP</category>
  
  <category>Java</category>
  
  <category>OOP</category>
  
  <category>Programming</category>
  
  <category>Video</category>
  
</item>

      
    
      
        <item>
  <title>You might not need jQuery</title>
  <description>&lt;p&gt;“&lt;em&gt;jQuery and its cousins are great, and by all means use them if it makes it easier to develop your application.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;“&lt;em&gt;If you’re developing a library on the other hand, please take a moment to consider if you actually need jQuery as a dependency. Maybe you can include a few lines of utility code, and forgo the requirement. If you’re only targeting more modern browsers, you might not need anything more than what the browser ships with.&lt;/em&gt;”&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 14 Jan 2021 08:38:13 +0000</pubDate>
  <dc:modified>Thu, 14 Jan 2021 13:15:31 +0000</dc:modified>
  <atom:modified>Thu, 14 Jan 2021 13:15:31 +0000</atom:modified>
  <link>http://youmightnotneedjquery.com/</link>
  <guid isPermaLink="false">https://alexn.org/links/2021/01/14/you-might-not-need-jquery.html</guid>
  
  <dc:creator>Adam Schwartz</dc:creator>
  
  <category>Shared link</category>
  
  <category>JavaScript</category>
  
  <category>Programming</category>
  
</item>

      
    
      
        <item>
  <title>Michael Jackson – They Don’t Care About Us</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=PoEa9bzeTu0&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/PoEa9bzeTu0/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;Michael’s music ages surprisingly well ❤️&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=PoEa9bzeTu0&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 29 Nov 2020 12:04:45 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=PoEa9bzeTu0</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/11/29/they-dont-care-about-us.html</guid>
  
  <dc:creator>Michael Jackson</dc:creator>
  
  <category>Shared link</category>
  
  <category>Music</category>
  
  <category>Video</category>
  
</item>

      
    
      
        <item>
  <title>Graphics for JVM</title>
  <description>&lt;a href=&quot;https://tonsky.me/blog/skija/&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/links/skija.png?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;&lt;em&gt;“Let’s say I want to build high-quality desktop apps. I also want to do it on JVM. Don’t get your hopes up—we are not there yet. But I have a plan.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://tonsky.me/blog/skija/&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 17 Nov 2020 13:58:46 +0000</pubDate>
  <dc:modified>Tue, 17 Nov 2020 14:16:04 +0000</dc:modified>
  <atom:modified>Tue, 17 Nov 2020 14:16:04 +0000</atom:modified>
  <link>https://tonsky.me/blog/skija/</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/11/17/graphics-for-jvm.html</guid>
  
  <dc:creator>Nikita Prokopov</dc:creator>
  
  <category>Shared link</category>
  
  <category>JVM</category>
  
  <category>Programming</category>
  
</item>

      
    
      
        <item>
  <title>Announcing .NET 5.0, C# 9, F# 5</title>
  <description>&lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0/&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/articles/dotnet.png?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;“&lt;em&gt;We’re excited to release .NET 5.0 today and for you to start using it. It’s a major release — including C# 9 and F# 5 — with a broad set of new features and compelling improvements.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;“&lt;em&gt;C# 9 and F# 5 offer new language improvements such as top-level programs and records for C# 9, while F# 5 offers interactive programming and a performance boost for functional programming on .NET.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;“&lt;em&gt;As part of .NET 5.0 and 6.0, we are unifying .NET into a single product experience, while enabling you to pick just the parts of the .NET platform that you want to use. If you want to target Mobile and not WebAssembly, you don’t need to download the WebAssembly tools, and vice versa. Same with ASP.NET Core and WPF. You’ll also have a much easier way to acquire all the .NET tools and build and runtime packs that you need from the command line. We’re enabling a package manager experience (including using existing package managers) for .NET platform components. That will be great for many scenarios. Quick construction of a development environment and CI/CD will probably be the biggest beneficiaries.&lt;/em&gt;”&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://devblogs.microsoft.com/dotnet/announcing-net-5-0/&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 11 Nov 2020 13:56:50 +0000</pubDate>
  <dc:modified>Wed, 11 Nov 2020 14:13:11 +0000</dc:modified>
  <atom:modified>Wed, 11 Nov 2020 14:13:11 +0000</atom:modified>
  <link>https://devblogs.microsoft.com/dotnet/announcing-net-5-0/</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/11/11/announcing-dotnet-5.html</guid>
  
  <dc:creator>Richard Lander</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>dotNET</category>
  
  <category>CSharp</category>
  
  <category>FSharp</category>
  
</item>

      
    
      
        <item>
  <title>TIMELAPSE OF THE FUTURE: A Journey to the End of Time</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=uD4izuDMUQA&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/uD4izuDMUQA/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;“&lt;em&gt;We start in 2019 and travel exponentially through time, witnessing the future of Earth, the death of the sun, the end of all stars, proton decay, zombie galaxies, possible future civilizations, exploding black holes, the effects of dark energy, alternate universes, the final fate of the cosmos - to name a few.&lt;/em&gt;”&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=uD4izuDMUQA&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 10 Nov 2020 08:51:12 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=uD4izuDMUQA</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/11/10/timelapse-of-the-future-a-journey-to-the-end-of-time.html</guid>
  
  <dc:creator>melodysheep</dc:creator>
  
  <category>Shared link</category>
  
  <category>Entertainment</category>
  
  <category>Video</category>
  
</item>

      
    
      
        <item>
  <title>Explicit term inference with Scala 3</title>
  <description>&lt;a href=&quot;https://www.scala-lang.org/2020/11/06/explicit-term-inference-in-scala-3.html&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/links/scala-explicit-terms.png?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;“&lt;em&gt;This post briefly introduces the new syntax and semantics available to Scala 3 programmers by analysing the most common use cases and patterns: extension methods, implicit parameters, implicit conversions and typeclasses.&lt;/em&gt;”&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.scala-lang.org/2020/11/06/explicit-term-inference-in-scala-3.html&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 10 Nov 2020 08:35:46 +0000</pubDate>
  <dc:modified>Tue, 10 Nov 2020 08:53:37 +0000</dc:modified>
  <atom:modified>Tue, 10 Nov 2020 08:53:37 +0000</atom:modified>
  <link>https://www.scala-lang.org/2020/11/06/explicit-term-inference-in-scala-3.html</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/11/10/explicit-term-inference-with-scala-3.html</guid>
  
  <dc:creator>Meriam Lachkar, Vincenzo Bazzucchi, Scala Center</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Scala</category>
  
</item>

      
    
      
        <item>
  <title>BSP Support in sbt 1.4</title>
  <description>&lt;a href=&quot;https://www.scala-lang.org/blog/2020/10/27/bsp-in-sbt.html&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/snippets/sbt-bsp-announcement.png?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;&lt;em&gt;“Today we are proud to announce that support of BSP has been shipped into sbt 1.4.0 … BSP in sbt improves the integration of sbt inside IDEs and code editors.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“BSP is inspired by LSP, the Language Server Protocol. The main difference being that LSP abstracts over the language whereas BSP abstracts over the build tool.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.scala-lang.org/blog/2020/10/27/bsp-in-sbt.html&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 28 Oct 2020 08:00:00 +0000</pubDate>
  <dc:modified>Wed, 28 Oct 2020 08:29:19 +0000</dc:modified>
  <atom:modified>Wed, 28 Oct 2020 08:29:19 +0000</atom:modified>
  <link>https://www.scala-lang.org/blog/2020/10/27/bsp-in-sbt.html</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/28/bsp-in-sbt.html</guid>
  
  <dc:creator>Scala Center</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Scala</category>
  
</item>

      
    
      
        <item>
  <title>Donald Trump vs Joe Biden — Epic Rap Battles Of History</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=FkGK7bitav0&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/FkGK7bitav0/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;Now you know the US presidential election is close 🤡&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=FkGK7bitav0&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 24 Oct 2020 20:41:03 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=FkGK7bitav0</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/24/donald-trump-vs-joe-biden.html</guid>
  
  <category>Shared link</category>
  
  <category>Entertainment</category>
  
  <category>Politics</category>
  
  <category>Video</category>
  
</item>

      
    
      
        <item>
  <title>Haskell: Monads. A 5-minute introduction</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=_Gk_lwhJMzk&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/_Gk_lwhJMzk/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;Just what the world needed, another monads tutorial 🙂&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=_Gk_lwhJMzk&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 13 Oct 2020 07:50:16 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=_Gk_lwhJMzk</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/13/haskell-monads-a-5-minute-introduction.html</guid>
  
  <dc:creator>Stephen Edwards</dc:creator>
  
  <category>Shared link</category>
  
  <category>FP</category>
  
  <category>Haskell</category>
  
  <category>Programming</category>
  
  <category>Video</category>
  
</item>

      
    
      
        <item>
  <title>Typelevel Cats Effect 3.0.0-M1</title>
  <description>&lt;a href=&quot;https://github.com/typelevel/cats-effect/releases/tag/v3.0.0-M1&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/links/ce3.svg?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;&lt;em&gt;“Cats Effect 3.0.0-M1 is the very first milestone release in the 3.0.0 line. We are expecting to follow this milestone with subsequent ones as necessary to further refine functionality and features, prior to some number of release candidates leading to a final release. The designation “M1” is meant to indicate our relative confidence in the functionality and API of the library, but it by no means indicates completeness or final compatibility. Neither binary compatibility nor source compatibility with anything are assured prior to 3.0.0, though major breakage is unlikely at this point.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://github.com/typelevel/cats-effect/releases/tag/v3.0.0-M1&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 10 Oct 2020 19:28:07 +0000</pubDate>
  <dc:modified>Mon, 12 Oct 2020 14:00:24 +0000</dc:modified>
  <atom:modified>Mon, 12 Oct 2020 14:00:24 +0000</atom:modified>
  <link>https://github.com/typelevel/cats-effect/releases/tag/v3.0.0-M1</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/10/cats-effect-3-0-0-m1.html</guid>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Scala</category>
  
  <category>Typelevel</category>
  
</item>

      
    
      
        <item>
  <title>Practice typing by retyping ENTIRE classic novels</title>
  <description>&lt;a href=&quot;https://www.typelit.io/&quot;&gt;
      &lt;img src=&quot;https://alexn.org/assets/media/links/typelit.io.png?202102261317&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
    &lt;p&gt;&lt;em&gt;“Improve your typing for free online by practicing on classic literature.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This looks like fun.&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.typelit.io/&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 10 Oct 2020 19:13:12 +0000</pubDate>
  <dc:modified>Mon, 12 Oct 2020 14:00:24 +0000</dc:modified>
  <atom:modified>Mon, 12 Oct 2020 14:00:24 +0000</atom:modified>
  <link>https://www.typelit.io/</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/10/practice-typing-by-retyping-entire-classic-novels.html</guid>
  
  <category>Shared link</category>
  
  <category>Tech Skills</category>
  
</item>

      
    
      
        <item>
  <title>Countdown to Scala 3</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=n9LPwOPACj4&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/n9LPwOPACj4/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;&lt;em&gt;“I give a quick status report where we are with Scala 3. What is the current status? What remains to be done? Who is contributing to the effort? I’ll also give some initial thoughts about how Scala will evolve after 3.0 is out.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Martin Odersky - Inventor of the Scala language, a professor at EPFL in Lausanne, Switzerland, and a founder of Lightbend. ACM fellow, co-designer of Java generics, and original author of the current javac reference Compiler.&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=n9LPwOPACj4&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 28 Oct 2020 07:40:46 +0000</dc:modified>
  <atom:modified>Wed, 28 Oct 2020 07:40:46 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=n9LPwOPACj4</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/10/countdown-to-scala-3.html</guid>
  
  <dc:creator>Martin Odersky</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Scala</category>
  
  <category>YouTube</category>
  
</item>

      
    
      
        <item>
  <title>State of the Haskell ecosystem</title>
  <description>&lt;p&gt;&lt;em&gt;“In this post I will describe the current state of the Haskell ecosystem to the best of my knowledge and its suitability for various programming domains and tasks. The purpose of this post is to discuss both the good and the bad by advertising where Haskell shines while highlighting where I believe there is room for improvement.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://github.com/Gabriel439/post-rfc/blob/master/sotu.md&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 12 Oct 2020 14:00:24 +0000</dc:modified>
  <atom:modified>Mon, 12 Oct 2020 14:00:24 +0000</atom:modified>
  <link>https://github.com/Gabriel439/post-rfc/blob/master/sotu.md</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/09/state-of-the-haskell-ecosystem.html</guid>
  
  <dc:creator>Gabriel Gonzalez</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Haskell</category>
  
</item>

      
    
      
        <item>
  <title>Category Theory for the Working Hacker</title>
  <description>&lt;a href=&quot;https://www.youtube.com/watch?v=V10hzjgoklA&quot;&gt;
      &lt;img src=&quot;https://img.youtube.com/vi/V10hzjgoklA/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; /&gt;
    &lt;/a&gt;
    &lt;p&gt;&lt;em&gt;“The talk will explain why category theory is of interest for developers. The principle of Propositions as Types describes a correspondence between propositions and proofs in logic, on the one hand, and types and programs in computing, on the other. Category theory constitutes a third leg of this correspondence. Assuming only enough familiarity with functional programming that you know why ‘Lambda World’ has that name, the talk will explain how to model products (logical and), sums (logical or), and functions (logical implication), and why you already learned the most important stuff in high school.”&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;
      &lt;a href=&quot;https://www.youtube.com/watch?v=V10hzjgoklA&quot;&gt;Read article ...&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 26 Feb 2021 07:25:54 +0000</dc:modified>
  <atom:modified>Fri, 26 Feb 2021 07:25:54 +0000</atom:modified>
  <link>https://www.youtube.com/watch?v=V10hzjgoklA</link>
  <guid isPermaLink="false">https://alexn.org/links/2020/10/08/category-theory-for-the-working-hacker.html</guid>
  
  <dc:creator>Philip Wadler</dc:creator>
  
  <category>Shared link</category>
  
  <category>Programming</category>
  
  <category>Category Theory</category>
  
  <category>FP</category>
  
  <category>Haskell</category>
  
  <category>Video</category>
  
</item>

      
    
  </channel>
</rss>
