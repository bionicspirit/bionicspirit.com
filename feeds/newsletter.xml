<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:dc="http://purl.org/dc/elements/1.1/">

  <channel>
    <title>Alexandru Nedelcu</title>
    <description>On programming and personal projects</description>
    <link>https://alexn.org/</link>
    <atom:link href="https://alexn.org/feeds/newsletter.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 20 Jan 2021 09:46:59 +0000</pubDate>
    <lastBuildDate>Wed, 20 Jan 2021 09:46:59 +0000</lastBuildDate>
  	<language>en</language>
    <sy:updatePeriod>hourly</sy:updatePeriod>
	  <sy:updateFrequency>1</sy:updateFrequency>
    <generator>Jekyll v4.1.1</generator>

    
      <item>
  <title>There are No Acceptable Ads</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/12/20/no-acceptable-ads.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/england1835.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;England 1835, by John Orlando Parry&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;The attention economy, and targeted advertising, are a first world problem, one that we have to deal with, because it’s affecting our well-being.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/12/20/no-acceptable-ads.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 20 Dec 2020 15:16:08 +0000</pubDate>
  <dc:modified>Mon, 04 Jan 2021 09:55:33 +0000</dc:modified>
  <atom:modified>Mon, 04 Jan 2021 09:55:33 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/12/20/no-acceptable-ads.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/12/20/no-acceptable-ads.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Browser</category>
  
  <category>Personal</category>
  
  <category>Privacy</category>
  
  <category>Web</category>
  
</item>

      
      <item>
  <title>Best practice for natural Ordering</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/ordering.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Definitions of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scala.math.Ordering&lt;/code&gt; MUST BE consistent with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;equals&lt;/code&gt;, an often overlooked law that can lead to problems.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 17 Nov 2020 09:02:13 +0000</pubDate>
  <dc:modified>Mon, 30 Nov 2020 15:02:24 +0000</dc:modified>
  <atom:modified>Mon, 30 Nov 2020 15:02:24 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/17/best-practice-for-ordering-comparable.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Practices</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Managing Database Migrations in Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/11/15/managing-database-migrations-scala.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/db-migrations-scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;The database schema should be described as code, in your repository. And you should be able to semi-automatically update your database schema on new deployments.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/11/15/managing-database-migrations-scala.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 15 Nov 2020 16:17:25 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 19:22:22 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 19:22:22 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/15/managing-database-migrations-scala.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/15/managing-database-migrations-scala.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Typelevel</category>
  
</item>

      
      <item>
  <title>I like Option.get</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/11/12/i-like-option-get.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/option.get.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;We should strive to make illegal states unrepresentable. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Option.get&lt;/code&gt; is a partial function that, according to many, shouldn’t be in the standard library. Yet it doesn’t bother me; the inability of Scala to make it safe is the problem.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/11/12/i-like-option-get.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 12 Nov 2020 18:02:46 +0000</pubDate>
  <dc:modified>Thu, 12 Nov 2020 20:08:25 +0000</dc:modified>
  <atom:modified>Thu, 12 Nov 2020 20:08:25 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/12/i-like-option-get.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/12/i-like-option-get.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>TypeScript</category>
  
</item>

      
      <item>
  <title>Organize and Index Your Screenshots (OCR) on macOS</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/spotlight-search.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Screenshots contain text, text that should be searchable, as finding a screenshot later is the whole point of creating it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 11 Nov 2020 12:43:46 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/11/11/organize-index-screenshots-ocr-macos.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Cloud</category>
  
  <category>macOS</category>
  
  <category>Ruby</category>
  
</item>

      
      <item>
  <title>Block comments on the web</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/10/20/block-comments-on-the-web.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/block-comments.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Comments on the web can be toxic, and a waste of time. Here’s how to block them…&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/10/20/block-comments-on-the-web.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 20 Oct 2020 19:51:45 +0000</pubDate>
  <dc:modified>Tue, 20 Oct 2020 22:01:46 +0000</dc:modified>
  <atom:modified>Tue, 20 Oct 2020 22:01:46 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/20/block-comments-on-the-web.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/10/20/block-comments-on-the-web.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Browser</category>
  
  <category>Privacy</category>
  
  <category>Web</category>
  
</item>

      
      <item>
  <title>When My World Vanishes</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/10/10/when-my-world-vanishes.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/earth.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;It’s me, facing a hard to solve problem. It’s a difficult one, and I’m having problems focusing. I make some coffee, I move to another room, and I’m already thinking of running to some coffee shop, forgetting that we’re still in a pandemic.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/10/10/when-my-world-vanishes.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 20 Oct 2020 21:50:16 +0000</dc:modified>
  <atom:modified>Tue, 20 Oct 2020 21:50:16 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/10/10/when-my-world-vanishes.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/10/10/when-my-world-vanishes.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Personal</category>
  
</item>

      
      <item>
  <title>Privilege</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/09/10/privilege.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/fi-miu.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;My son ❤️&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Today it’s my 38ᵗʰ birthday. I was born into privilege. Other people aren’t as lucky.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/09/10/privilege.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
  <dc:modified>Thu, 10 Sep 2020 14:04:28 +0000</dc:modified>
  <atom:modified>Thu, 10 Sep 2020 14:04:28 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/09/10/privilege.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/09/10/privilege.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Personal</category>
  
</item>

      
      <item>
  <title>Retry Failing Tasks with Cats and Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/08/03/on-error-retry-loop.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/snippets/on-error-retry-loop.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Retry actions ending in failure via simple functions and Typelevel Cats type-classes.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/08/03/on-error-retry-loop.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/08/03/on-error-retry-loop.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/08/03/on-error-retry-loop.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Fatal Warnings and Linting in Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/05/26/scala-fatal-warnings.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-xfatal-warnings.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Strengthen your code via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Xfatal-warnings&lt;/code&gt;, linting and piss off your colleagues with useful compiler errors.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/05/26/scala-fatal-warnings.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/05/26/scala-fatal-warnings.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/05/26/scala-fatal-warnings.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Parallelizing Work via a JavaScript Semaphore</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/04/21/javascript-semaphore.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/async-semaphore-typescript.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Simple and very effective implementation of a Semaphore, used for easily parallelizing work in JavaScript/TypeScript.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/04/21/javascript-semaphore.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 21 Apr 2020 16:00:00 +0000</pubDate>
  <dc:modified>Wed, 22 Apr 2020 09:12:30 +0000</dc:modified>
  <atom:modified>Wed, 22 Apr 2020 09:12:30 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/04/21/javascript-semaphore.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/04/21/javascript-semaphore.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Asynchrony</category>
  
  <category>Concurrency</category>
  
  <category>JavaScript</category>
  
  <category>TypeScript</category>
  
</item>

      
      <item>
  <title>Blog Updates</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2020/04/21/blog-updates.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://img.youtube.com/vi/RYmGT905Skc/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; 
          alt=&quot;YouTube thumbnail&quot; /&gt;
      &lt;/a&gt;
    &lt;p&gt;Dusted off my website, with big plans ahead.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2020/04/21/blog-updates.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 21 Apr 2020 10:00:00 +0000</pubDate>
  <dc:modified>Wed, 26 Aug 2020 06:02:40 +0000</dc:modified>
  <atom:modified>Wed, 26 Aug 2020 06:02:40 +0000</atom:modified>
  <link>https://alexn.org/blog/2020/04/21/blog-updates.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2020/04/21/blog-updates.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Blogging</category>
  
  <category>Personal</category>
  
</item>

      
      <item>
  <title>Regexp Replacement via Function in Java/Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-replace-all-function.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Replace in strings via regexp, with the replacement being calculated via a function.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 18:05:28 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 18:05:28 +0000</atom:modified>
  <link>https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2019/11/22/howto-regexp-replacement-via-function-java-scala.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Scala</category>
  
  <category>Ruby</category>
  
</item>

      
      <item>
  <title>Scala&#39;s isInstanceOf is an Anti-Pattern</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-instanceof-antipattern.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Scala has a much better way of discriminating between types. Scala has implicit parameters, with which you can describe type classes.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 23:15:01 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 23:15:01 +0000</atom:modified>
  <link>https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2019/08/11/isinstanceof-anti-pattern.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>On Bifunctor IO and Java&#39;s Checked Exceptions</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2018/05/06/bifunctor-io.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/bio.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Bifunctor IO is a hot topic in the Scala community. Herein I’m expressing my dislike for it, as it shares the problems of Java’s Checked Exceptions.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2018/05/06/bifunctor-io.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 18:05:28 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 18:05:28 +0000</atom:modified>
  <link>https://alexn.org/blog/2018/05/06/bifunctor-io.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2018/05/06/bifunctor-io.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>FP</category>
  
  <category>Typelevel</category>
  
  <category>Scala</category>
  
  <category>Haskell</category>
  
</item>

      
      <item>
  <title>In Defense of OOFP</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2018/02/12/in-defense-oofp.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala-stairs.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&amp;lt;a href=&amp;quot;https://www.flickr.com/photos/gilles_dubochet/7327041044&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;Credits&amp;lt;/a&amp;gt;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;OOP versus Type Classes, exemplified and in defense of the Scala collections redesign.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2018/02/12/in-defense-oofp.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 18:05:28 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 18:05:28 +0000</atom:modified>
  <link>https://alexn.org/blog/2018/02/12/in-defense-oofp.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2018/02/12/in-defense-oofp.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>OOP</category>
  
  <category>FP</category>
  
  <category>Haskell</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Minitest: Zero Crap Scala Testing Library</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Minitest is my minimal testing library that I’ve been using for developing Monix.
&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/11/10/minitest-no-crap-scala-library.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Testing</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>What is Functional Programming?</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/10/15/functional-programming.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/functions.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;FP is programming with (mathematical) functions, there’s no room for interpretation.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/10/15/functional-programming.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 22 Apr 2020 01:16:57 +0000</dc:modified>
  <atom:modified>Wed, 22 Apr 2020 01:16:57 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/10/15/functional-programming.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/15/functional-programming.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>FP</category>
  
  <category>Haskell</category>
  
  <category>Scala</category>
  
  <category>JavaScript</category>
  
</item>

      
      <item>
  <title>Scala Days 2017 — Monix Task</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/10/13/scaladays-copenhagen.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://img.youtube.com/vi/wi97X8_JQUk/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; 
          alt=&quot;YouTube thumbnail&quot; /&gt;
      &lt;/a&gt;
    &lt;p&gt;My presentation from Scala Days 2017, Chicago (April) and Copenhagen (June), on the design of Monix’s Task.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/10/13/scaladays-copenhagen.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/10/13/scaladays-copenhagen.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/13/scaladays-copenhagen.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Monix</category>
  
  <category>Presentation</category>
  
</item>

      
      <item>
  <title>JavaScript&#39;s Promise Leaks Memory</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/js-then.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;JavaScript’s Promise leaks memory in recursive loops and what you can do about it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/10/11/javascript-promise-leaks-memory.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Concurrency</category>
  
  <category>FP</category>
  
  <category>Funfix</category>
  
  <category>JavaScript</category>
  
</item>

      
      <item>
  <title>Automatic Releases to Maven Central with Travis and SBT</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/sbt.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Enabling automatic releases for your open source Scala project with Travis and SBT.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 16 Aug 2017 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 13:06:57 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 13:06:57 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/08/16/automatic-releases-sbt-travis.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>SBT</category>
  
  <category>Scala</category>
  
  <category>Sonatype</category>
  
  <category>Travis</category>
  
</item>

      
      <item>
  <title>Functional Programming Inception (Presentation)</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/03/15/fp-inception.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/2017-fp-inception.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;My presentation from the Bucharest FP meetup.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/03/15/fp-inception.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 15 Mar 2017 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/03/15/fp-inception.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/03/15/fp-inception.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Monix</category>
  
</item>

      
      <item>
  <title>Asynchronous Programming and Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/01/30/asynchronous-programming-scala.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/nondet.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Asynchrony is everywhere and it subsumes concurrency. This article explains what asynchronous processing is and its challenges.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/01/30/asynchronous-programming-scala.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/01/30/asynchronous-programming-scala.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/30/asynchronous-programming-scala.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Asynchrony</category>
  
  <category>Best Of</category>
  
  <category>Concurrency</category>
  
  <category>Multithreading</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Fixing scala.collection.Iterator</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/01/16/iterator.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;The venerable Iterator interface we all love and hate could use some improvements. This is a follow-up to my previous article, in which I talked about getting rid of Traversable because the Iterable and Iterator duo is enough for Scala’s standard library.
&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/01/16/iterator.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 16 Jan 2017 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/01/16/iterator.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/16/iterator.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Why Scala&#39;s Traversable Is Bad Design</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2017/01/13/traversable.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Traversable was a design mistake, is redundant and we should remove it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2017/01/13/traversable.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2017/01/13/traversable.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2017/01/13/traversable.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Add to NewsBlur Bookmarklet</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2016/11/11/newsblur-bookmarklet.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/newsblur.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;An Add to NewsBlur bookmarklet that you can copy-paste for iPhone/iPad/Android usage&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2016/11/11/newsblur-bookmarklet.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 11 Nov 2016 00:00:00 +0000</pubDate>
  <dc:modified>Tue, 21 Apr 2020 13:06:57 +0000</dc:modified>
  <atom:modified>Tue, 21 Apr 2020 13:06:57 +0000</atom:modified>
  <link>https://alexn.org/blog/2016/11/11/newsblur-bookmarklet.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/11/11/newsblur-bookmarklet.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Utils</category>
  
  <category>Web</category>
  
</item>

      
      <item>
  <title>Monix Task vs Scalaz vs Future, The Benchmark</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2016/08/25/monix-task-performance.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/monix-1024.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;The Task in Monix has really good performance. See the benchmark.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2016/08/25/monix-task-performance.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2016/08/25/monix-task-performance.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/08/25/monix-task-performance.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Monix</category>
  
  <category>Typelevel</category>
  
</item>

      
      <item>
  <title>Akka &amp; Monix - Typelevel Summit, Oslo 2016</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2016/05/15/monix-observable.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://img.youtube.com/vi/CQxviYlAKaY/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; 
          alt=&quot;YouTube thumbnail&quot; /&gt;
      &lt;/a&gt;
    &lt;p&gt;Presentation from Typelevel Summit, Oslo, 2016, about my experience in dealing with modeling behavior by processing asynchronous soft-real time signals using Akka &amp;amp; Monix.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2016/05/15/monix-observable.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 15 May 2016 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2016/05/15/monix-observable.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/05/15/monix-observable.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Monix</category>
  
</item>

      
      <item>
  <title>Monix Task - flatMap(Oslo) 2016</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2016/05/10/monix-task.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://img.youtube.com/vi/rftcbxj7et0/maxresdefault.jpg&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot; 
          alt=&quot;YouTube thumbnail&quot; /&gt;
      &lt;/a&gt;
    &lt;p&gt;My presentation from flatMap(Oslo) 2016. It’s about the Monix Task, a new type for dealing with asynchronous processing on top of Scala and Scala.js.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2016/05/10/monix-task.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 10 May 2016 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2016/05/10/monix-task.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2016/05/10/monix-task.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Monix</category>
  
  <category>Presentation</category>
  
  <category>Scala</category>
  
</item>

      
      <item>
  <title>Avoid Javaisms: Mocks, Stubs, DI is Code Smell</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/skunk.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Such practices represent clear signals for code smell, meaning code that sucks as a symptom of a bigger problem, one of design. The lumping together of these practices is not an accident, as they are related.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Nov 2020 10:18:34 +0000</dc:modified>
  <atom:modified>Mon, 16 Nov 2020 10:18:34 +0000</atom:modified>
  <link>https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2015/12/15/avoid-javaisms-code-smell.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Rx</category>
  
</item>

      
      <item>
  <title>Monifu vs Akka Streams</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/monifu.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Back in June I attended
Scala Days in
Amsterdam and participated at a talk by Mathias Doenitz on
The Reactive Streams Implementation Landscape.
It was a good talk, yet I felt a little bias towards Akka Streams,
which is natural coming from somebody that is contributing to Akka,
but let me give you the perspective from the other side.
&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 06 Sep 2015 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2015/09/06/monifu-vs-akka-streams.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Rx</category>
  
  <category>Reactive Streams</category>
  
</item>

      
      <item>
  <title>Scala Best Practices</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2014/10/20/scala-best-practices.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;This is a collection of best practices for Scala, something to get you started.
&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2014/10/20/scala-best-practices.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2014/10/20/scala-best-practices.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2014/10/20/scala-best-practices.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Languages</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Best Practices</category>
  
</item>

      
      <item>
  <title>Resources for Learning Scala</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2013/05/13/getting-started-with-scala.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Getting started with a new programming language shouldn't be hard,
  however navigating the web for resources on getting started with Scala
  can be a doubting experience, as many such resources are either out of
  date, or wrong, or both. This post is intended to reduce the noise for
  my colleagues and other people that are interested in Scala
  development.

&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2013/05/13/getting-started-with-scala.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2013/05/13/getting-started-with-scala.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/05/13/getting-started-with-scala.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Languages</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Books</category>
  
</item>

      
      <item>
  <title>Towards a Better AtomicReference</title>
  <description>&lt;p&gt;The
  AtomicReference
  is like a container for a volatile reference. Usage of volatile
  references is useful for the issue of
  visibility
  in concurrent code, however AtomicReference also supports the atomic
  Compare-and-Swap
  operation (CAS for short), which is the pillar of all non-blocking
  data-structures and algorithms built on top of the JVM, including
  complex ones like the ConcurrentLinkedQueue, an implementation based
  on the
  Michael-Scott non-blocking queues.

&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 07 May 2013 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/05/07/towards-better-atomicreference-scala.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Languages</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Java</category>
  
  <category>Multithreading</category>
  
  <category>Concurrency</category>
  
</item>

      
      <item>
  <title>JVM Multithreading: Monitor Locks and Visibility</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/ferrari.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Multithreading is a pain to deal with. While interviewing developers,
  I noticed that surprisingly many don't have knowledge about this topic
  and I can't blame them really. However, in this day and age, for some
  problem domains building highly-concurrent architectures may be
  paramount to the success of demanding projects. As you'll see, there
  are many high level solutions, but I personally prefer to learn with a
  bottom up approach, starting from the basic and unsafe primitives, as
  understanding the problem is always the first step to real solutions.

&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2013/03/14/jvm-multithreading-monitor-locks-visibility.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Languages</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Java</category>
  
  <category>Multithreading</category>
  
  <category>Concurrency</category>
  
</item>

      
      <item>
  <title>Notes On JavaScript Client-side Development</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2012/11/07/notes-javascript-development.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/javascript.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Client-side JavaScript development can be quite overwhelming, even for senior developers. I’m describing here what I did in a recent piece of client-side functionality to keep my sanity. This interface I’m talking about is served on mobile-phones, so it must be pretty bloat-free, adding salt over injury.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2012/11/07/notes-javascript-development.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Wed, 07 Nov 2012 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/11/07/notes-javascript-development.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/11/07/notes-javascript-development.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>JavaScript</category>
  
  <category>FP</category>
  
  <category>Browser</category>
  
  <category>Web</category>
  
</item>

      
      <item>
  <title>On Scala, Functional Programming and Type-Classes</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/scala.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;I’ve been following the excellent Coursera course on &lt;a href=&quot;https://www.coursera.org/course/progfun&quot;&gt;Functional Programming Principles in Scala&lt;/a&gt; led by Martin Odersky. This was not my first encounter with Scala as I’ve been using it including for my day job.
In this article I’m describing my impressions of the Scala programming language and why I fel in love with it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/11/02/scala-functional-programming-type-classes.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Languages</category>
  
  <category>FP</category>
  
  <category>Scala</category>
  
  <category>Clojure</category>
  
  <category>Java</category>
  
</item>

      
      <item>
  <title>How To Build a Naive Bayes Classifier</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/conditional-prob.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;In machine learning a classifier is able to predict, given an input, a probability distribution over a set of categories. Some use-cases for building a classifier: spam detection, for example you could build your own Akismet API, automatic assignment of categories to a set of items, automatic detection of the primary language (e.g. Google Translate), sentiment analysis, which in simple terms refers to discovering if an opinion is about love or hate about a certain topic.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 09 Feb 2012 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 25 Jan 2020 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 25 Jan 2020 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/02/09/howto-build-naive-bayes-classifier.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>Algorithms</category>
  
  <category>Mining</category>
  
  <category>Ruby</category>
  
</item>

      
      <item>
  <title>Data Mining: Finding Similar Items and Users</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/cosine-distance.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;How to find related items? Here are recipes based on really simple formulas. If you pay attention, this technique is used all over the web (like on Amazon) to personalize the user experience and increase conversion rates. Because we want to give kick-ass product recommendations.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 16 Jan 2012 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 28 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 28 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/01/16/cosine-similarity-euclidean-distance.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>Algorithms</category>
  
  <category>Mining</category>
  
  <category>Ruby</category>
  
</item>

      
      <item>
  <title>Blogging Platform for Hackers</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2012/01/05/blogging-for-hackers.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/jekyll.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Host your own static website on Heroku’s free plan, use Google’s App Engine as a CDN, keep Heroku’s free dyno alive, generate the website via Jekyll.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2012/01/05/blogging-for-hackers.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate>
  <dc:modified>Thu, 19 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Thu, 19 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2012/01/05/blogging-for-hackers.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2012/01/05/blogging-for-hackers.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Blogging</category>
  
  <category>Server</category>
  
  <category>Cloud</category>
  
  <category>Heroku</category>
  
  <category>Ruby</category>
  
  <category>Jekyll</category>
  
</item>

      
      <item>
  <title>Crawling the Android Marketplace</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/wolf-spider.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;I had a very specific need for fetching the details for some apps in the Android marketplace, in an automated manner. Here I’m describing a script that I used to crawl the marketplace back in 2011.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/12/15/crawling-the-android-marketplace-155200-apps.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Python</category>
  
  <category>Android</category>
  
  <category>Web</category>
  
  <category>API</category>
  
</item>

      
      <item>
  <title>Android Learning Resources</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/12/12/android-learning-resources.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/android-development.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Starting out learning Android development may be intimidating at first, as with any new platform of reasonable complexity you’ll have a lot to learn. However the learning process is fun. So here are some learning resources that I’m currently following.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/12/12/android-learning-resources.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Mon, 12 Dec 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/12/12/android-learning-resources.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/12/12/android-learning-resources.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Books</category>
  
  <category>Android</category>
  
</item>

      
      <item>
  <title>Earning Money as an Amazon Affiliate</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/amazon-associates.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;I published an article that I've meant to publish for a long
  time. I'm usually lazy to not bother writing many articles, however
  this time I also thought about doing an experiment - you see I'm (1)
  on a tight budget and (2) a cheap bastard - so what if I could get
  enough money to pay for my monthly hosting on Linode, while
  satisfying my urge to write from time to time?
&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 29 Nov 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/11/29/earning-money-as-an-amazon-affiliate.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Publishing</category>
  
  <category>Income</category>
  
  <category>Amazon</category>
  
</item>

      
      <item>
  <title>4 Books For Learning to Design, The Hard Way</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/book-design-all.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;I present some books I enjoyed, which is the path I’m taking to get better at design and user experience.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 25 Nov 2011 00:00:00 +0000</pubDate>
  <dc:modified>Mon, 16 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Mon, 16 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/11/25/4-books-for-learning-to-design-the-hard-way.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>Design</category>
  
  <category>UX</category>
  
  <category>Books</category>
  
</item>

      
      <item>
  <title>How I Use Flickr: For Backup</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/10/29/how-i-use-flickr.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/flickr.jpg?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&amp;lt;a href='https://flic.kr/p/qYPVGA' target='_blank'&amp;gt;Source&amp;lt;/a&amp;gt;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;I’ve got a growing number of personal pictures and the collection is growing since 2003 … Pro accounts on Flickr have unlimited storage and can upload and access full-resolution pictures.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/10/29/how-i-use-flickr.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sat, 29 Oct 2011 00:00:00 +0000</pubDate>
  <dc:modified>Sun, 15 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Sun, 15 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/10/29/how-i-use-flickr.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/10/29/how-i-use-flickr.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Cloud</category>
  
  <category>API</category>
  
  <category>Ruby</category>
  
</item>

      
      <item>
  <title>Why I Find Heroku Suboptimal</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/heroku.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;Heroku is great. It basically allows you to avoid growing-up. The deployment itself couldn’t be simpler, and when browsing their web interface for available add-ons, I feel like a child in a candy-store. But I’ve outgrown it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 23 Oct 2011 00:00:00 +0000</pubDate>
  <dc:modified>Wed, 18 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Wed, 18 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/10/23/why-i-find-heroku-suboptimal.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>DevOps</category>
  
  <category>Heroku</category>
  
  <category>Server</category>
  
  <category>Cloud</category>
  
  <category>Nginx</category>
  
  <category>Varnish</category>
  
</item>

      
      <item>
  <title>Cross-Domain, Cross-Browser AJAX Requests</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2011/03/24/cross-domain-requests.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/cors-ajax.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;This article describes how to make cross-browser requests, in all browsers (including IExplorer 6), using web standards along with fallbacks and without using a proxy or JSONP (which is limited and awkward) – as long as you control the destination server, or if the destination server allows.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2011/03/24/cross-domain-requests.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Thu, 24 Mar 2011 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 14 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 14 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2011/03/24/cross-domain-requests.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2011/03/24/cross-domain-requests.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>JavaScript</category>
  
  <category>Browser</category>
  
  <category>Web</category>
  
</item>

      
      <item>
  <title>I hate NULL and all its variants!</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2010/05/25/i-hate-null.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/beautiful-soup.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;How many times have you had a chain of methods like this (example showing BeautifulSoup in action) …

&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2010/05/25/i-hate-null.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Tue, 25 May 2010 00:00:00 +0000</pubDate>
  <dc:modified>Fri, 13 Nov 2020 14:50:48 +0000</dc:modified>
  <atom:modified>Fri, 13 Nov 2020 14:50:48 +0000</atom:modified>
  <link>https://alexn.org/blog/2010/05/25/i-hate-null.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2010/05/25/i-hate-null.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Python</category>
  
</item>

      
      <item>
  <title>FreeSWITCH - Tips for Creating a Dialer</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/freeswitch1.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;FreeSWITCH is a free and open source application server for real-time communication, WebRTC, telecommunications, video and Voice over Internet Protocol. Let’s build a VoIP dialer with it.&lt;/p&gt;
&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Fri, 20 Feb 2009 00:00:00 +0000</pubDate>
  <dc:modified>Sat, 14 Dec 2019 00:00:00 +0000</dc:modified>
  <atom:modified>Sat, 14 Dec 2019 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2009/02/20/tips-for-creating-voip-dialer.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Best Of</category>
  
  <category>VoIP</category>
  
  <category>FreeSWITCH</category>
  
  <category>JavaScript</category>
  
  <category>Perl</category>
  
</item>

      
      <item>
  <title>Using the Best Tools in Programming: Not Really Doable</title>
  <description>&lt;a href=&quot;https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable.html?pk_campaign=letter&amp;pk_kwd=image&quot;&gt;
        &lt;img src=&quot;https://alexn.org/assets/media/articles/tools.png?202101200947&quot; align=&quot;middle&quot; style=&quot;display: block; max-width:100%; margin: 0 auto;&quot;
          alt=&quot;&quot; /&gt;
      &lt;/a&gt;
      &lt;br /&gt;
    &lt;p&gt;There's something that bothers me when it comes to starting a new project. You can't really use the best tool for a certain job, if that tool is not integrated with the rest of your platform. Let me explain.

&lt;/p&gt;&lt;p&gt;
      &lt;a href=&quot;https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable.html?pk_campaign=letter&amp;pk_kwd=read-more&quot;&gt;Read article →&lt;/a&gt;
    &lt;/p&gt;</description>
  <pubDate>Sun, 01 Feb 2009 00:00:00 +0000</pubDate>
  <dc:modified>Sun, 01 Feb 2009 00:00:00 +0000</dc:modified>
  <atom:modified>Sun, 01 Feb 2009 00:00:00 +0000</atom:modified>
  <link>https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable.html?pk_campaign=letter&amp;pk_kwd=link</link>
  <guid isPermaLink="true">https://alexn.org/blog/2009/02/01/using-best-tools-programming-not-doable.html</guid>
  
  
  <dc:creator>Alexandru Nedelcu</dc:creator>
  
  <category>Blog</category>
  
  <category>Java</category>
  
  <category>Perl</category>
  
  <category>Python</category>
  
  <category>Ruby</category>
  
</item>

      </channel>
</rss>
